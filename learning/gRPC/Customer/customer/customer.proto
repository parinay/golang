// version of Protocol Buffer
syntax = "proto3";
// package declaration
package customer;

//The service Definition
// Types of RPC methods
// 1. Request / Response model
// (stream keyword is specified before req/response)
// 2. Request/ Server side streaming RPC model
// 3. Client side streaming / Response
// 4. Bi-direction streaming RPC
service Customer {
  // Get all Customers with filter - A server to client streaming RPC.
  rpc GetCustomers(CustomerFilter) returns (stream CustomerRequest) {}
  // Create a new customer - A simple RPC
  rpc CreateCustomer (CustomerRequest) returns (CustomerResponse) {}
}
// message type
// standard data types such as int32, float, double, string as field types
// user defined field types can also be used.
// "=1", "=2" markers on each elements are "unique" tags used in binary encoding
// Default value numeric type is zero, string is empty, false for bools

message CustomerRequest {
  int32 id = 1; // Unique ID number for customer.
  string name = 2;
  string email = 3;
  string phone = 4;

  message Address {
    string street = 1;
    string city = 2;
    string state = 3;
    string zip = 4;
    bool isShippingAddress = 5;
  }
  repeated Address addresses = 5;
}
message CustomerResponse {
  int32 id = 1;
  bool success = 2;
}
message CustomerFilter {
  string keyword = 1;
}

